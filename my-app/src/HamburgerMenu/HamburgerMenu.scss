$items: 4;
$transition-duration: 0.5s;
$transition-delay: 0.05s;

a {
  text-decoration: none;
}

.container {
  background: #fff;
  background-color: rgba(0, 0, 0, 0.96);
  border-bottom: 1px solid #fff;
}

.hamburger-header {
  display: flex;
  align-items: baseline;
  justify-content: center;
  width: 100%;
}

.nav {
  display: inline-block;
  margin: 25px 25px 20px;
  pointer-events: none;
  transition: $transition-duration;
  width: 100%;
}

.nav-item {
  position: relative;
  display: inline-block;
  float: left;
  clear: both;
  color: transparent;
  font-size: 14px;
  letter-spacing: -6.2px;
  height: 7px;
  line-height: 7px;
  text-transform: uppercase;
  white-space: nowrap;
  transform: scaleY(0.2);
  transition: $transition-duration, opacity 1s;

  @for $i from 1 through $items {
    &:nth-child(#{$i}) {
      $delay: ($i - 1) * $transition-delay;
      transition-delay: $delay;
      &:before {
        transition-delay: $delay;
      }
    }
  }

  &:nth-child(1) {
    letter-spacing: -8px;
  }

  &:nth-child(2) {
    letter-spacing: -7px;
  }

  &:nth-child(n + 4) {
    letter-spacing: -8px;
    margin-top: -7px;
    opacity: 0;
  }

  &:before {
    position: absolute;
    content: '';
    top: 50%;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: #FFF;
    transform: translateY(-50%) scaleY(5);
    transition: $transition-duration;
  }
}

.hamburger-ying {
  color: white;
  display: block;
  width: 100px;
  height: 28px;
  background-size: 28px 28px;
  background-image: url("../../public/Yin_yang.svg");
  background-position: center center;
  background-repeat: no-repeat;
}

.hamburger-ying:hover {
  opacity: 0.65;
}

.hamburger-logo {
  color: #FFF;
  margin: 0 auto;
  font-size: 25px;
  margin-right: 20px;
  width: 100%;
  display: flex;
  justify-content: flex-end;
}

#toggle {
  position: absolute;
  left: -100%;
  top: -100%;
}

#toggle:focus {
  & ~ .toggle-container .button-toggle {
    box-shadow: 0 0 0 8px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1);
  }
}

#toggle:checked {
  & ~ .hamburger-header {
    .hamburger-logo, .hamburger-ying {
      display: none;
    }
  }

  & ~ .toggle-container .button-toggle {
    box-shadow: 0 0 0 550px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1);

    &:hover {
      box-shadow: 0 0 0 550px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1), 0 0 0 8px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1);
    }

    &:before {
      transform: translateY(-50%) rotate(45deg) scale(1);
    }

    &:after {
      transform: translateY(-50%) rotate(-45deg) scale(1);
    }
  }

  &:focus ~ .toggle-container .button-toggle {
    box-shadow: 0 0 0 550px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1), 0 0 0 8px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1);
  }

  & ~ .hamburger-header .nav {
    margin-bottom: 100px;
    pointer-events: auto;
    transform: translate(50px, 50px);

    .nav-item {
      color: #FFF;
      letter-spacing: 0;
      height: 40px;
      line-height: 40px;
      margin-top: 0;
      opacity: 1;
      transform: scaleY(1);
      transition: $transition-duration, opacity 0.1s;

      @for $i from 1 through $items {
        &:nth-child(#{$i}) {
          $delay: ($items - $i) * $transition-delay;
          transition-delay: $delay;
          &:before {
            transition-delay: $delay;
          }
        }
      }

      &:before {
        opacity: 0;
      }
    }
  }
}

.button-toggle {
  position: absolute;
  display: inline-block;
  width: 20px;
  height: 20px;
  margin: 25px;
  background-color: transparent;
  border: none;
  cursor: pointer;
  border-radius: 100%;
  transition: $transition-duration + 0.1;

  &:hover {
    box-shadow: 0 0 0 8px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1);
  }

  &:before, &:after {
    position: absolute;
    content: '';
    top: 50%;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: #FFF;
    border-radius: 5px;
    transition: $transition-duration;
  }

  &:before {
    transform: translateY(-50%) rotate(45deg) scale(0);
  }

  &:after {
    transform: translateY(-50%) rotate(-45deg) scale(0);
  }
}